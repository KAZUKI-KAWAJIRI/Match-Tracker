{
  "snippets": [
    {
      "name": "rsc",
      "description": "Reactサーバーコンポーネント",
      "prefix": "rsc",
      "body": [
        "export default function ${1:ComponentName}() {",
        "  return (",
        "    <div>",
        "      $0",
        "    </div>",
        "  )",
        "}"
      ],
      "scope": "typescriptreact"
    },
    {
      "name": "rcc",
      "description": "Reactクライアントコンポーネント",
      "prefix": "rcc",
      "body": [
        "'use client'",
        "",
        "export default function ${1:ComponentName}() {",
        "  return (",
        "    <div>",
        "      $0",
        "    </div>",
        "  )",
        "}"
      ],
      "scope": "typescriptreact"
    },
    {
      "name": "usst",
      "description": "useState Hookを使用",
      "prefix": "usst",
      "body": [
        "const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState${2:<${3:string}>}(${4:''})"
      ],
      "scope": "typescriptreact"
    },
    {
      "name": "useff",
      "description": "useEffect Hookを使用",
      "prefix": "useff",
      "body": [
        "useEffect(() => {",
        "  $0",
        "}, [${1:dependencies}])"
      ],
      "scope": "typescriptreact"
    },
    {
      "name": "nextpage",
      "description": "Next.jsのpage.tsxテンプレート",
      "prefix": "nextpage",
      "body": [
        "export default function Page() {",
        "  return (",
        "    <main className=\"container mx-auto p-4\">",
        "      <h1 className=\"text-2xl font-bold mb-4\">${1:ページタイトル}</h1>",
        "      $0",
        "    </main>",
        "  )",
        "}"
      ],
      "scope": "typescriptreact"
    },
    {
      "name": "nextlayout",
      "description": "Next.jsのlayout.tsxテンプレート",
      "prefix": "nextlayout",
      "body": [
        "export default function Layout({",
        "  children,",
        "}: {",
        "  children: React.ReactNode",
        "}) {",
        "  return (",
        "    <div className=\"${1:min-h-screen}\">",
        "      $0",
        "      {children}",
        "    </div>",
        "  )",
        "}"
      ],
      "scope": "typescriptreact"
    },
    {
      "name": "supaselect",
      "description": "Supabaseからデータを取得するコード",
      "prefix": "supaselect",
      "body": [
        "const { data: ${1:items}, error } = await supabase",
        "  .from('${2:table}')",
        "  .select('${3:*}')",
        "  $0"
      ],
      "scope": "typescript,typescriptreact"
    },
    {
      "name": "prisget",
      "description": "Prismaからデータを取得するコード",
      "prefix": "prisget",
      "body": [
        "const ${1:data} = await prisma.${2:model}.findMany({",
        "  where: {",
        "    ${3:field}: ${4:value},$0",
        "  },",
        "})"
      ],
      "scope": "typescript,typescriptreact"
    }
  ]
} 